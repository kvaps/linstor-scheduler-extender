---
apiVersion: v1
kind: ConfigMap
metadata:
  name: linstor-scheduler
  namespace: kube-system

data:
  scheduler-config.yaml: |-
    apiVersion: kubescheduler.config.k8s.io/v1beta3
    kind: KubeSchedulerConfiguration
    profiles:
      - schedulerName: linstor
    extenders:
      - urlPrefix: http://localhost:8099
        filterVerb: filter
        prioritizeVerb: prioritize
        weight: 5
        enableHTTPS: false
        httpTimeout: 300000s
        nodeCacheCapable: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: linstor-scheduler
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: linstor-scheduler
  template:
    metadata:
      labels:
        app.kubernetes.io/name: linstor-scheduler
    spec:
      containers:
        - name: kube-scheduler
          command:
          - kube-scheduler
          - --config=/etc/kubernetes/scheduler-config.yaml
          - --leader-elect=true
          - --leader-elect-resource-name=linstor-scheduler
          - --leader-elect-resource-namespace=$(NAMESPACE)
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: k8s.gcr.io/kube-scheduler-amd64:v1.23.3
          imagePullPolicy: IfNotPresent
          startupProbe:
            failureThreshold: 24
            httpGet:
              path: /healthz
              port: 10259
              scheme: HTTPS
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /healthz
              port: 10259
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 15
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10259
              scheme: HTTPS
          volumeMounts:
          - mountPath: /etc/kubernetes
            name: scheduler-config
        - name: linstor-scheduler-extender
          image: quay.io/piraeusdatastore/linstor-scheduler-extender:v0.2.0
          imagePullPolicy: IfNotPresent
          args:
          - --verbose=true
          env:
            - name: LS_CONTROLLERS
              value: http://piraeus-op-cs.default.svc
      serviceAccountName: linstor-scheduler
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
      - configMap:
          defaultMode: 420
          name: linstor-scheduler
        name: scheduler-config
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: linstor-scheduler
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: linstor-scheduler
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linstor-scheduler
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch", "update"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods", "namespaces"]
    verbs: ["delete", "get", "list", "watch"]
  - apiGroups: [""]
    resources: ["bindings", "pods/binding"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["pods/status"]
    verbs: ["patch", "update"]
  - apiGroups: [""]
    resources: ["replicationcontrollers", "services"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["*"]
    resources: ["replicasets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["statefulsets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["policy"]
    resources: ["poddisruptionbudgets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims", "persistentvolumes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses", "csinodes","csidrivers", "csistoragecapacities"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["events.k8s.io"]
    resources: ["events"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linstor-scheduler
  namespace: kube-system
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linstor-scheduler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linstor-scheduler
subjects:
  - kind: ServiceAccount
    name: linstor-scheduler
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linstor-scheduler
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: linstor-scheduler
subjects:
  - kind: ServiceAccount
    name: linstor-scheduler
    namespace: kube-system
